# 1. Servicio para exponer el Backend
# Crea un punto de acceso público (LoadBalancer) para tu aplicación NestJS.
apiVersion: v1
kind: Service
metadata:
  name: teslo-backend-svc
  namespace: teslo-shop
spec:
  # El tipo LoadBalancer solicita una IP pública a tu proveedor de nube o a tu clúster local (si está configurado).
  # En entornos de producción más avanzados, se suele usar un tipo ClusterIP y un Ingress Controller.
  type: LoadBalancer
  selector:
    # Redirige el tráfico a cualquier pod con la etiqueta "app: teslo-backend".
    app: teslo-backend
  ports:
    - name: http
      protocol: TCP
      port: 80 # Puerto público por el que se accederá al servicio.
      targetPort: 3000 # Puerto del contenedor donde corre la app NestJS.

---

# 2. Despliegue del Backend
# Define cómo se debe ejecutar el contenedor de tu aplicación NestJS.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teslo-backend-deployment
  namespace: teslo-shop
spec:
  replicas: 1 # Puedes aumentar el número de réplicas para escalar la aplicación.
  selector:
    matchLabels:
      app: teslo-backend
  template:
    metadata:
      labels:
        app: teslo-backend
    spec:
      containers:
      - name: teslo-backend
        # ¡IMPORTANTE! Reemplaza 'tu-usuario' con tu nombre de usuario de Docker Hub (o el registro que uses).
        image: tu-usuario/teslo-shop:latest
        ports:
        - containerPort: 3000
        # Aquí definimos las variables de entorno para la aplicación.
        env:
          # --- Variables de entorno públicas ---
          - name: DB_HOST
            value: "teslo-postgres-svc" # Apunta al servicio de Postgres que creamos.
          - name: DB_PORT
            value: "5432" # El puerto estándar de Postgres.
          - name: DB_NAME
            value: "TesloDB" # El nombre de tu base de datos.
          - name: DB_USERNAME
            value: "postgres" # El usuario de tu base de datos.

          # --- Variables cargadas desde los Secrets de Kubernetes ---
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: teslo-db-secret # Nombre del Secret de la DB.
                key: DB_PASSWORD      # Clave dentro de ese Secret.
          - name: HOST_API
            valueFrom:
              secretKeyRef:
                name: teslo-backend-secret # Nombre del Secret del Backend.
                key: HOST_API             # Clave dentro de ese Secret.
          - name: SECRET_PASSWORD
            valueFrom:
              secretKeyRef:
                name: teslo-backend-secret # Nombre del Secret del Backend.
                key: SECRET_PASSWORD      # Clave dentro de ese Secret.
